// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int            @id @default(autoincrement())
  username             String
  email                String         @unique
  password             String
  profile              String
  profileId            String
  location             String
  active               Boolean        @default(false)
  tokens               Token[]
  emailToken           Int
  emailTokenExpires    DateTime
  resetPasswordToken   Int
  resetPasswordExpires DateTime
  conversations        Conversation[] @relation(name: "by")
  conversationsTo      Conversation[] @relation(name: "to")
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @default(now())
  userId               Int?
  requests             User[]         @relation("requests")
  requestsRelation     User[]         @relation("requests")
  friends              User[]         @relation("friends")
  friendsRelation      User[]         @relation("friends")
  recevied             Message[]      @relation(name: "Recevied")
  sent                 Message[]      @relation(name: "Sent")
  msgRequests          MsgRequest[]
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Conversation {
  id        Int       @id @default(autoincrement())
  by        User      @relation("by", fields: [byId], references: [id])
  byId      Int       
  to        User      @relation("to", fields: [toId], references: [id])
  toId      Int       @unique
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Message {
  id             Int           @id @default(autoincrement())
  text           String
  image          String?
  isMine         Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  receiver       User          @relation("Recevied", fields: [receiverId], references: [id])
  receiverId     Int
  sender         User          @relation("Sent", fields: [senderId], references: [id])
  senderId       Int
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId Int?
}

model MsgRequest {
  id        Int      @id @default(autoincrement())
  msg       String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
